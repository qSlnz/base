{
  "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "PoolCreation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        }
      ],
      "name": "PoolExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "PoolWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Stake",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_threshold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_sendTo",
          "type": "address"
        }
      ],
      "name": "createPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPoolCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "isParticipatingTo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc594cd01bb547874d0cf847ab22e7e0f8b8fd4820dad7ff495eea709c433428c",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
    "transactionIndex": 0,
    "gasUsed": "781000",
    "logsBloom": "0x
    "blockHash": "0x2709602546e37c86cd0fbe4a62f85ff5cc03cd0ac3cb81e4882b6fa5820393d5",
    "transactionHash": "0xc594cd01bb547874d0cf847ab22e7e0f8b8fd4820dad7ff495eea709c433428c",
    "logs": [],
    "blockNumber": 12,
    "cumulativeGasUsed": "781000",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "066e1ad3bb433eccf77b8072f0fc4ab7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"PoolCreation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"PoolExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"PoolWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_sendTo\",\"type\":\"address\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isParticipatingTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/facets/Staker.sol\":\"Staker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/facets/Staker.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.3;\\n\\nimport \\\"./../storages/PoolsStorage.sol\\\";\\n\\ncontract Staker {\\n    /**********\\n     * EVENTS *\\n     **********/\\n\\n    event Stake(\\n        uint256 indexed poolId,\\n        address indexed staker,\\n        uint256 indexed amount\\n    );\\n    event PoolCreation(uint256 indexed poolId, address indexed staker);\\n    event PoolExecuted(uint256 indexed poolId);\\n    event PoolWithdraw(uint256 indexed poolId, address indexed staker);\\n\\n    /*************\\n     * MODIFIERS *\\n     *************/\\n\\n    modifier poolExists(uint256 _poolId) {\\n        PoolsStorage.DiamondStorage storage ds = PoolsStorage.get();\\n        require(_poolId < ds.poolCount, \\\"Wtf bro this pool has never existed\\\");\\n        _;\\n    }\\n\\n    modifier poolIsEnded(uint256 _poolId) {\\n        PoolsStorage.DiamondStorage storage ds = PoolsStorage.get();\\n        require(\\n            ds.pools[_poolId].deadline < block.timestamp,\\n            \\\"This pool is live\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier poolIsLive(uint256 _poolId) {\\n        PoolsStorage.DiamondStorage storage ds = PoolsStorage.get();\\n        require(\\n            ds.pools[_poolId].deadline >= block.timestamp,\\n            \\\"This pool is done\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier reentrancyGuard() {\\n        PoolsStorage.DiamondStorage storage ds = PoolsStorage.get();\\n        require(!ds.lock, \\\"Liar! Cheater! Thief!\\\");\\n        ds.lock = true;\\n        _;\\n        ds.lock = false;\\n    }\\n\\n    /*************\\n     * FUNCTIONS *\\n     *************/\\n\\n    /* return poolid */\\n    function createPool(\\n        uint256 _threshold,\\n        uint256 _deadline,\\n        address payable _sendTo\\n    ) public returns (uint256) {\\n        require(_deadline > 0);\\n        require(_sendTo != address(0));\\n\\n        PoolsStorage.DiamondStorage storage ds = PoolsStorage.get();\\n\\n        uint256 poolId = ds.poolCount;\\n        ds.poolCount++;\\n\\n        PoolsStorage.Pool memory newPool;\\n        newPool.threshold = _threshold * 1 wei;\\n        newPool.deadline = block.timestamp + _deadline * 1 seconds;\\n        newPool.executed = false;\\n        newPool.sendTo = _sendTo;\\n\\n        ds.pools[poolId] = newPool;\\n\\n        emit PoolCreation(poolId, msg.sender);\\n\\n        return poolId;\\n    }\\n\\n    function stake(uint256 _poolId)\\n        public\\n        payable\\n        poolExists(_poolId)\\n        poolIsLive(_poolId)\\n    {\\n        require(msg.value > 0, \\\"Gimme yo money\\\");\\n\\n        PoolsStorage.DiamondStorage storage ds = PoolsStorage.get();\\n\\n        ds.balances[msg.sender][_poolId] += msg.value;\\n        ds.pools[_poolId].totalStaked += msg.value;\\n\\n        emit Stake(_poolId, msg.sender, msg.value);\\n    }\\n\\n    function withdraw(uint256 _poolId)\\n        public\\n        poolExists(_poolId)\\n        poolIsEnded(_poolId)\\n        reentrancyGuard()\\n    {\\n        PoolsStorage.DiamondStorage storage ds = PoolsStorage.get();\\n\\n        require(\\n            ds.pools[_poolId].totalStaked < ds.pools[_poolId].threshold,\\n            \\\"The pool is a success, your ethers are mine hahaha.\\\"\\n        );\\n\\n        uint256 amountToWithdraw = ds.balances[msg.sender][_poolId];\\n\\n        require(amountToWithdraw > 0, \\\"Nothing you can withdraw here\\\");\\n\\n        (bool success, ) = msg.sender.call{value: amountToWithdraw}(\\\"\\\");\\n\\n        require(success, \\\"Sending money failed\\\");\\n\\n        ds.balances[msg.sender][_poolId] = 0;\\n\\n        emit PoolWithdraw(_poolId, msg.sender);\\n    }\\n\\n    function execute(uint256 _poolId)\\n        public\\n        poolExists(_poolId)\\n        poolIsEnded(_poolId)\\n        reentrancyGuard()\\n    {\\n        PoolsStorage.DiamondStorage storage ds = PoolsStorage.get();\\n\\n        require(\\n            !ds.pools[_poolId].executed,\\n            \\\"The pool has already been executed\\\"\\n        );\\n        require(\\n            ds.pools[_poolId].totalStaked >= ds.pools[_poolId].threshold,\\n            \\\"The pool didnt reach the threshold amout, go withdraw your ethers using withdraw function\\\"\\n        );\\n\\n        uint256 amountToWithdraw = ds.pools[_poolId].totalStaked;\\n        (bool success, ) =\\n            ds.pools[_poolId].sendTo.call{\\n                value: amountToWithdraw,\\n                gas: gasleft()\\n            }(\\\"\\\");\\n\\n        require(success, \\\"Sending money failed\\\");\\n\\n        ds.pools[_poolId].executed = true;\\n\\n        emit PoolExecuted(_poolId);\\n    }\\n\\n    function isParticipatingTo(uint256 _poolId, address _addr)\\n        public\\n        view\\n        poolExists(_poolId)\\n        returns (bool)\\n    {\\n        PoolsStorage.DiamondStorage storage ds = PoolsStorage.get();\\n\\n        if (ds.balances[_addr][_poolId] > 0) {\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    function getPoolCount()\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        PoolsStorage.DiamondStorage storage ds = PoolsStorage.get();\\n        return ds.poolCount;\\n    }\\n    // TODO > handle case MAX_UINT256 reached\\n    // Question: I use uint256, but if I use uint64 for example, I will use less gas on smartcontract creation and method call that use it?\\n}\\n\",\"keccak256\":\"0x64299338411582c497738cf29cd27cbc3f48000ace134affbed9102fd4df4508\",\"license\":\"UNLICENSED\"},\"contracts/storages/PoolsStorage.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.8.3;\\n\\nlibrary PoolsStorage {\\n    bytes32 constant STORAGE_POSITION = keccak256(\\\"myapp.pools\\\");\\n\\n    struct Pool {\\n        uint256 threshold;\\n        uint256 deadline;\\n        uint256 totalStaked;\\n        address payable sendTo;\\n        bool executed;\\n    }\\n\\n    struct DiamondStorage {\\n        uint256 poolCount;\\n        bool lock;\\n        mapping(uint256 => Pool) pools;\\n        mapping(address => mapping(uint256 => uint256)) balances;\\n    }\\n\\n    function get() internal pure returns (DiamondStorage storage diamond) {\\n        bytes32 position = STORAGE_POSITION;\\n        assembly {\\n            diamond.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5b49bdf1fe9bba6d059c02d02dd738223cf23cb6462259d9cf01149856e57b8f\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610d2b806100206000396000f3fe6080604052600436106100555760003560e01c80632e1a7d4d1461005a57806363aa673a1461007c5780637fd8b9a2146100b15780638eec5d70146100df578063a694fc3a14610101578063fe0d94c114610114575b600080fd5b34801561006657600080fd5b5061007a610075366004610b73565b610134565b005b34801561008857600080fd5b5061009c610097366004610b8b565b61045c565b60405190151581526020015b60405180910390f35b3480156100bd57600080fd5b506100d16100cc366004610bba565b610500565b6040519081526020016100a8565b3480156100eb57600080fd5b50600080516020610cb6833981519152546100d1565b61007a61010f366004610b73565b610649565b34801561012057600080fd5b5061007a61012f366004610b73565b6107ec565b600080516020610cb68339815191528054829190821061016f5760405162461bcd60e51b815260040161016690610bf2565b60405180910390fd5b6000838152600080516020610cd683398151915260205260409020600101548390600080516020610cb68339815191529042116101e25760405162461bcd60e51b81526020600482015260116024820152705468697320706f6f6c206973206c69766560781b6044820152606401610166565b7f1e3473498986645b36f14b0b2fc09399f1a6b684f2943cf64c58018950046b1c54600080516020610cb68339815191529060ff161561025c5760405162461bcd60e51b81526020600482015260156024820152744c696172212043686561746572212054686965662160581b6044820152606401610166565b6001818101805460ff191690911790556000868152600080516020610cd6833981519152602052604090208054600290910154600080516020610cb683398151915291116103085760405162461bcd60e51b815260206004820152603360248201527f54686520706f6f6c206973206120737563636573732c20796f7572206574686560448201527239399030b9329036b4b732903430b430b4309760691b6064820152608401610166565b33600090815260038201602090815260408083208a8452909152902054806103725760405162461bcd60e51b815260206004820152601d60248201527f4e6f7468696e6720796f752063616e20776974686472617720686572650000006044820152606401610166565b604051600090339083908381818185875af1925050503d80600081146103b4576040519150601f19603f3d011682016040523d82523d6000602084013e6103b9565b606091505b50509050806104015760405162461bcd60e51b815260206004820152601460248201527314d95b991a5b99c81b5bdb995e4819985a5b195960621b6044820152606401610166565b33600081815260038501602090815260408083208d8452909152808220829055518b917f3ceb37674be0001d002617fdc5593db16484470794ba8321288fd6e144f5270091a3505050600101805460ff191690555050505050565b600080516020610cb68339815191528054600091849182106104905760405162461bcd60e51b815260040161016690610bf2565b6001600160a01b03841660009081527f1e3473498986645b36f14b0b2fc09399f1a6b684f2943cf64c58018950046b1e60209081526040808320888452909152902054600080516020610cb683398151915290156104f25760019350506104f8565b60009350505b505092915050565b600080831161050e57600080fd5b6001600160a01b03821661052157600080fd5b600080516020610cb683398151915280548082600061053f83610c6c565b91905055506105816040518060a0016040528060008152602001600081526020016000815260200160006001600160a01b031681526020016000151581525090565b61058c876001610c4d565b8152610599866001610c4d565b6105a39042610c35565b60208083019182526000608084018181526001600160a01b03808a16606087019081528784526002808a01909552604080852088518155965160018801558088015195870195909555516003909501805492511515600160a01b026001600160a81b031990931695909116949094171790925551339184917f2f20e512c4f741f2807d702ff408750eb86f0607ccf0252de9bf2d4b74eef06e9190a35095945050505050565b600080516020610cb68339815191528054829190821061067b5760405162461bcd60e51b815260040161016690610bf2565b6000838152600080516020610cd683398151915260205260409020600101548390600080516020610cb6833981519152904211156106ef5760405162461bcd60e51b81526020600482015260116024820152705468697320706f6f6c20697320646f6e6560781b6044820152606401610166565b600034116107305760405162461bcd60e51b815260206004820152600e60248201526d47696d6d6520796f206d6f6e657960901b6044820152606401610166565b3360009081527f1e3473498986645b36f14b0b2fc09399f1a6b684f2943cf64c58018950046b1e6020908152604080832088845290915281208054600080516020610cb683398151915292349291610789908490610c35565b909155505060008681526002808301602052604082200180543492906107b0908490610c35565b90915550506040513490339088907f02567b2553aeb44e4ddd5d68462774dc3de158cb0f2c2da1740e729b22086aff90600090a4505050505050565b600080516020610cb68339815191528054829190821061081e5760405162461bcd60e51b815260040161016690610bf2565b6000838152600080516020610cd683398151915260205260409020600101548390600080516020610cb68339815191529042116108915760405162461bcd60e51b81526020600482015260116024820152705468697320706f6f6c206973206c69766560781b6044820152606401610166565b7f1e3473498986645b36f14b0b2fc09399f1a6b684f2943cf64c58018950046b1c54600080516020610cb68339815191529060ff161561090b5760405162461bcd60e51b81526020600482015260156024820152744c696172212043686561746572212054686965662160581b6044820152606401610166565b6001818101805460ff191690911790556000868152600080516020610cd68339815191526020526040902060030154600080516020610cb683398151915290600160a01b900460ff16156109ac5760405162461bcd60e51b815260206004820152602260248201527f54686520706f6f6c2068617320616c7265616479206265656e20657865637574604482015261195960f21b6064820152608401610166565b60008781526002808301602052604090912080549101541015610a5d5760405162461bcd60e51b815260206004820152605960248201527f54686520706f6f6c206469646e7420726561636820746865207468726573686f60448201527f6c6420616d6f75742c20676f20776974686472617720796f757220657468657260648201527f73207573696e672077697468647261772066756e6374696f6e00000000000000608482015260a401610166565b6000878152600280830160205260408220908101546003909101549091906001600160a01b0316825a6040519091906000818181858888f193505050503d8060008114610ac6576040519150601f19603f3d011682016040523d82523d6000602084013e610acb565b606091505b5050905080610b135760405162461bcd60e51b815260206004820152601460248201527314d95b991a5b99c81b5bdb995e4819985a5b195960621b6044820152606401610166565b6000898152600284016020526040808220600301805460ff60a01b1916600160a01b179055518a917f9b71b80499881a3683a1c9ab40c2c68bf1ca2bdc45b46d1b4b4fc0163c20f25791a2505050600101805460ff191690555050505050565b600060208284031215610b84578081fd5b5035919050565b60008060408385031215610b9d578081fd5b823591506020830135610baf81610c9d565b809150509250929050565b600080600060608486031215610bce578081fd5b83359250602084013591506040840135610be781610c9d565b809150509250925092565b60208082526023908201527f5774662062726f207468697320706f6f6c20686173206e6576657220657869736040820152621d195960ea1b606082015260800190565b60008219821115610c4857610c48610c87565b500190565b6000816000190483118215151615610c6757610c67610c87565b500290565b6000600019821415610c8057610c80610c87565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610cb257600080fd5b5056fe1e3473498986645b36f14b0b2fc09399f1a6b684f2943cf64c58018950046b1b1e3473498986645b36f14b0b2fc09399f1a6b684f2943cf64c58018950046b1da26469706673582212204a31bc9713eadf56b6668597ecb1602705f55e7cffb8b60c44cc031f0b5889e464736f6c63430008030033",
  "deployedBytecode": "0x6080604052600436106100555760003560e01c80632e1a7d4d1461005a57806363aa673a1461007c5780637fd8b9a2146100b15780638eec5d70146100df578063a694fc3a14610101578063fe0d94c114610114575b600080fd5b34801561006657600080fd5b5061007a610075366004610b73565b610134565b005b34801561008857600080fd5b5061009c610097366004610b8b565b61045c565b60405190151581526020015b60405180910390f35b3480156100bd57600080fd5b506100d16100cc366004610bba565b610500565b6040519081526020016100a8565b3480156100eb57600080fd5b50600080516020610cb6833981519152546100d1565b61007a61010f366004610b73565b610649565b34801561012057600080fd5b5061007a61012f366004610b73565b6107ec565b600080516020610cb68339815191528054829190821061016f5760405162461bcd60e51b815260040161016690610bf2565b60405180910390fd5b6000838152600080516020610cd683398151915260205260409020600101548390600080516020610cb68339815191529042116101e25760405162461bcd60e51b81526020600482015260116024820152705468697320706f6f6c206973206c69766560781b6044820152606401610166565b7f1e3473498986645b36f14b0b2fc09399f1a6b684f2943cf64c58018950046b1c54600080516020610cb68339815191529060ff161561025c5760405162461bcd60e51b81526020600482015260156024820152744c696172212043686561746572212054686965662160581b6044820152606401610166565b6001818101805460ff191690911790556000868152600080516020610cd6833981519152602052604090208054600290910154600080516020610cb683398151915291116103085760405162461bcd60e51b815260206004820152603360248201527f54686520706f6f6c206973206120737563636573732c20796f7572206574686560448201527239399030b9329036b4b732903430b430b4309760691b6064820152608401610166565b33600090815260038201602090815260408083208a8452909152902054806103725760405162461bcd60e51b815260206004820152601d60248201527f4e6f7468696e6720796f752063616e20776974686472617720686572650000006044820152606401610166565b604051600090339083908381818185875af1925050503d80600081146103b4576040519150601f19603f3d011682016040523d82523d6000602084013e6103b9565b606091505b50509050806104015760405162461bcd60e51b815260206004820152601460248201527314d95b991a5b99c81b5bdb995e4819985a5b195960621b6044820152606401610166565b33600081815260038501602090815260408083208d8452909152808220829055518b917f3ceb37674be0001d002617fdc5593db16484470794ba8321288fd6e144f5270091a3505050600101805460ff191690555050505050565b600080516020610cb68339815191528054600091849182106104905760405162461bcd60e51b815260040161016690610bf2565b6001600160a01b03841660009081527f1e3473498986645b36f14b0b2fc09399f1a6b684f2943cf64c58018950046b1e60209081526040808320888452909152902054600080516020610cb683398151915290156104f25760019350506104f8565b60009350505b505092915050565b600080831161050e57600080fd5b6001600160a01b03821661052157600080fd5b600080516020610cb683398151915280548082600061053f83610c6c565b91905055506105816040518060a0016040528060008152602001600081526020016000815260200160006001600160a01b031681526020016000151581525090565b61058c876001610c4d565b8152610599866001610c4d565b6105a39042610c35565b60208083019182526000608084018181526001600160a01b03808a16606087019081528784526002808a01909552604080852088518155965160018801558088015195870195909555516003909501805492511515600160a01b026001600160a81b031990931695909116949094171790925551339184917f2f20e512c4f741f2807d702ff408750eb86f0607ccf0252de9bf2d4b74eef06e9190a35095945050505050565b600080516020610cb68339815191528054829190821061067b5760405162461bcd60e51b815260040161016690610bf2565b6000838152600080516020610cd683398151915260205260409020600101548390600080516020610cb6833981519152904211156106ef5760405162461bcd60e51b81526020600482015260116024820152705468697320706f6f6c20697320646f6e6560781b6044820152606401610166565b600034116107305760405162461bcd60e51b815260206004820152600e60248201526d47696d6d6520796f206d6f6e657960901b6044820152606401610166565b3360009081527f1e3473498986645b36f14b0b2fc09399f1a6b684f2943cf64c58018950046b1e6020908152604080832088845290915281208054600080516020610cb683398151915292349291610789908490610c35565b909155505060008681526002808301602052604082200180543492906107b0908490610c35565b90915550506040513490339088907f02567b2553aeb44e4ddd5d68462774dc3de158cb0f2c2da1740e729b22086aff90600090a4505050505050565b600080516020610cb68339815191528054829190821061081e5760405162461bcd60e51b815260040161016690610bf2565b6000838152600080516020610cd683398151915260205260409020600101548390600080516020610cb68339815191529042116108915760405162461bcd60e51b81526020600482015260116024820152705468697320706f6f6c206973206c69766560781b6044820152606401610166565b7f1e3473498986645b36f14b0b2fc09399f1a6b684f2943cf64c58018950046b1c54600080516020610cb68339815191529060ff161561090b5760405162461bcd60e51b81526020600482015260156024820152744c696172212043686561746572212054686965662160581b6044820152606401610166565b6001818101805460ff191690911790556000868152600080516020610cd68339815191526020526040902060030154600080516020610cb683398151915290600160a01b900460ff16156109ac5760405162461bcd60e51b815260206004820152602260248201527f54686520706f6f6c2068617320616c7265616479206265656e20657865637574604482015261195960f21b6064820152608401610166565b60008781526002808301602052604090912080549101541015610a5d5760405162461bcd60e51b815260206004820152605960248201527f54686520706f6f6c206469646e7420726561636820746865207468726573686f60448201527f6c6420616d6f75742c20676f20776974686472617720796f757220657468657260648201527f73207573696e672077697468647261772066756e6374696f6e00000000000000608482015260a401610166565b6000878152600280830160205260408220908101546003909101549091906001600160a01b0316825a6040519091906000818181858888f193505050503d8060008114610ac6576040519150601f19603f3d011682016040523d82523d6000602084013e610acb565b606091505b5050905080610b135760405162461bcd60e51b815260206004820152601460248201527314d95b991a5b99c81b5bdb995e4819985a5b195960621b6044820152606401610166565b6000898152600284016020526040808220600301805460ff60a01b1916600160a01b179055518a917f9b71b80499881a3683a1c9ab40c2c68bf1ca2bdc45b46d1b4b4fc0163c20f25791a2505050600101805460ff191690555050505050565b600060208284031215610b84578081fd5b5035919050565b60008060408385031215610b9d578081fd5b823591506020830135610baf81610c9d565b809150509250929050565b600080600060608486031215610bce578081fd5b83359250602084013591506040840135610be781610c9d565b809150509250925092565b60208082526023908201527f5774662062726f207468697320706f6f6c20686173206e6576657220657869736040820152621d195960ea1b606082015260800190565b60008219821115610c4857610c48610c87565b500190565b6000816000190483118215151615610c6757610c67610c87565b500290565b6000600019821415610c8057610c80610c87565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610cb257600080fd5b5056fe1e3473498986645b36f14b0b2fc09399f1a6b684f2943cf64c58018950046b1b1e3473498986645b36f14b0b2fc09399f1a6b684f2943cf64c58018950046b1da26469706673582212204a31bc9713eadf56b6668597ecb1602705f55e7cffb8b60c44cc031f0b5889e464736f6c63430008030033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}