{
  "address": "0x0a70C9aB017117BE5FA6B6D7b587B89BA548edDd",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "PoolCreation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        }
      ],
      "name": "PoolExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "PoolWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Stake",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_threshold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_sendTo",
          "type": "address"
        }
      ],
      "name": "createPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "isParticipatingTo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pools",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "threshold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalStaked",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "sendTo",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        }
      ],
      "name": "timeleft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x55a7edc6210cc566b77dc3757bf7699847bb69672f18a1348f5f7e116bcc2985",
  "receipt": {
    "to": null,
    "from": "0x959FD7Ef9089B7142B6B908Dc3A8af7Aa8ff0FA1",
    "contractAddress": "0x0a70C9aB017117BE5FA6B6D7b587B89BA548edDd",
    "transactionIndex": 0,
    "gasUsed": "754079",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000002000800000000000000000000100000000004000000000000000000000000000000000000000000000000080000000000000000000000000000000000008000000000000200000000080000000000000000000200000000000000000000000000000000000000000000000000000000000004000000000000000000001000000000000000000000000000000100040000000000000000000000000000000000000000000000000000000000000000000100000",
    "blockHash": "0x4f8e6a0cf0390ffbae984effd41ca441291f0c3f91ecc14f0fd3eb0df4a34e74",
    "transactionHash": "0x55a7edc6210cc566b77dc3757bf7699847bb69672f18a1348f5f7e116bcc2985",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 12411257,
        "transactionHash": "0x55a7edc6210cc566b77dc3757bf7699847bb69672f18a1348f5f7e116bcc2985",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000959fd7ef9089b7142b6b908dc3a8af7aa8ff0fa1",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000002add4b2ed7600000000000000000000000000000000000000000000000000288fbec5d19380e20000000000000000000000000000000000000000000000640347a289524a2286000000000000000000000000000000000000000000000000288d10f11ea60ae2000000000000000000000000000000000000000000000064034a505e05379886",
        "logIndex": 0,
        "blockHash": "0x4f8e6a0cf0390ffbae984effd41ca441291f0c3f91ecc14f0fd3eb0df4a34e74"
      }
    ],
    "blockNumber": 12411257,
    "cumulativeGasUsed": "754079",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "853c38ce213221c593ddeeea8e01805e",
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"PoolCreation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"PoolExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"PoolWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_sendTo\",\"type\":\"address\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isParticipatingTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"sendTo\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"timeleft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staker.sol\":\"Staker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Staker.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.7.4;\\n\\ncontract Staker {\\n    /*************\\n     * VARIABLES *\\n     *************/\\n\\n    uint256 public poolCount = 0;\\n\\n    struct Pool {\\n        uint256 threshold;\\n        uint256 deadline;\\n        uint256 totalStaked;\\n        address payable sendTo;\\n        bool executed;\\n    }\\n\\n    mapping(uint256 => Pool) public pools;\\n\\n    /* balance for a specific address and pool */\\n    mapping(address => mapping(uint256 => uint256)) public balances;\\n    /* locking no reentrency */\\n    bool private lock = false;\\n\\n    /**********\\n     * EVENTS *\\n     **********/\\n\\n    event Stake(\\n        uint256 indexed poolId,\\n        address indexed staker,\\n        uint256 indexed amount\\n    );\\n    event PoolCreation(uint256 indexed poolId, address indexed staker);\\n    event PoolExecuted(uint256 indexed poolId);\\n    event PoolWithdraw(uint256 indexed poolId, address indexed staker);\\n\\n    /*************\\n     * MODIFIERS *\\n     *************/\\n\\n    modifier poolExists(uint256 _poolId) {\\n        require(_poolId < poolCount, \\\"Wtf bro this pool has never existed\\\");\\n        _;\\n    }\\n\\n    modifier poolIsEnded(uint256 _poolId) {\\n        require(pools[_poolId].deadline < block.timestamp, \\\"This pool is live\\\");\\n        _;\\n    }\\n\\n    modifier poolIsLive(uint256 _poolId) {\\n        require(\\n            pools[_poolId].deadline >= block.timestamp,\\n            \\\"This pool is done\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier reentrancyGuard() {\\n        require(!lock, \\\"Liar! Cheater! Thief!\\\");\\n        lock = true;\\n        _;\\n        lock = false;\\n    }\\n\\n    /*************\\n     * FUNCTIONS *\\n     *************/\\n\\n    /* return poolid */\\n    function createPool(\\n        uint256 _threshold,\\n        uint256 _deadline,\\n        address payable _sendTo\\n    ) public returns (uint256) {\\n        require(_deadline > 0);\\n        require(_sendTo != address(0));\\n\\n        uint256 poolId = poolCount;\\n        poolCount++;\\n\\n        Pool memory newPool;\\n        newPool.threshold = _threshold * 1 wei;\\n        newPool.deadline = block.timestamp + _deadline * 1 seconds;\\n        newPool.executed = false;\\n        newPool.sendTo = _sendTo;\\n\\n        pools[poolId] = newPool;\\n\\n        emit PoolCreation(poolId, msg.sender);\\n\\n        return poolId;\\n    }\\n\\n    function stake(uint256 _poolId)\\n        public\\n        payable\\n        poolExists(_poolId)\\n        poolIsLive(_poolId)\\n    {\\n        require(msg.value > 0, \\\"Gimme yo money\\\");\\n\\n        balances[msg.sender][_poolId] += msg.value;\\n        pools[_poolId].totalStaked += msg.value;\\n\\n        emit Stake(_poolId, msg.sender, msg.value);\\n    }\\n\\n    function withdraw(uint256 _poolId)\\n        public\\n        poolExists(_poolId)\\n        poolIsEnded(_poolId)\\n        reentrancyGuard()\\n    {\\n        require(\\n            pools[_poolId].totalStaked < pools[_poolId].threshold,\\n            \\\"The pool is a success, your ethers are mine hahaha.\\\"\\n        );\\n\\n        uint256 amountToWithdraw = balances[msg.sender][_poolId];\\n\\n        require(amountToWithdraw > 0, \\\"Nothing you can withdraw here\\\");\\n\\n        (bool success, ) = msg.sender.call{value: amountToWithdraw}(\\\"\\\");\\n\\n        require(success, \\\"Sending money failed\\\");\\n\\n        balances[msg.sender][_poolId] = 0;\\n\\n        emit PoolWithdraw(_poolId, msg.sender);\\n    }\\n\\n    function execute(uint256 _poolId)\\n        public\\n        poolExists(_poolId)\\n        poolIsEnded(_poolId)\\n        reentrancyGuard()\\n    {\\n        require(!pools[_poolId].executed, \\\"The pool has already been executed\\\");\\n        require(\\n            pools[_poolId].totalStaked >= pools[_poolId].threshold,\\n            \\\"The pool didnt reach the threshold amout, go withdraw your ethers using withdraw function\\\"\\n        );\\n\\n        uint256 amountToWithdraw = pools[_poolId].totalStaked;\\n        (bool success, ) =\\n            pools[_poolId].sendTo.call{value: amountToWithdraw, gas: gasleft()}(\\n                \\\"\\\"\\n            );\\n\\n        require(success, \\\"Sending money failed\\\");\\n\\n        pools[_poolId].executed = true;\\n\\n        emit PoolExecuted(_poolId);\\n    }\\n\\n    function isParticipatingTo(uint256 _poolId, address _addr)\\n        public\\n        view\\n        poolExists(_poolId)\\n        returns (bool)\\n    {\\n        if (balances[_addr][_poolId] > 0) {\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    function timeleft(uint256 _poolId)\\n        public\\n        view\\n        poolExists(_poolId)\\n        returns (uint256)\\n    {\\n        int256 timel =\\n            int256(pools[_poolId].deadline) - int256(block.timestamp);\\n        if (timel > 0) {\\n            return uint256(timel);\\n        } else {\\n            return 0;\\n        }\\n    }\\n\\n    // TODO > handle case MAX_UINT256 reached\\n    // Question: I use uint256, but if I use uint64 for example, I will use less gas on smartcontract creation and method call that use it?\\n}\\n\",\"keccak256\":\"0x430a6eba727fdd1a34a5d8449d699632d84ec91baabd0e9123990c2d50fc18d2\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x6080604052600080556003805460ff1916905534801561001e57600080fd5b50610ca18061002e6000396000f3fe6080604052600436106100865760003560e01c8063ac4afa3811610059578063ac4afa3814610172578063ba99470c146101d2578063cbf1304d146101fc578063f525cb6814610235578063fe0d94c11461024a57610086565b80632e1a7d4d1461008b57806363aa673a146100b75780637fd8b9a214610104578063a694fc3a14610155575b600080fd5b34801561009757600080fd5b506100b5600480360360208110156100ae57600080fd5b5035610274565b005b3480156100c357600080fd5b506100f0600480360360408110156100da57600080fd5b50803590602001356001600160a01b031661051d565b604080519115158252519081900360200190f35b34801561011057600080fd5b506101436004803603606081101561012757600080fd5b50803590602081013590604001356001600160a01b031661059e565b60408051918252519081900360200190f35b6100b56004803603602081101561016b57600080fd5b5035610686565b34801561017e57600080fd5b5061019c6004803603602081101561019557600080fd5b50356107d1565b604080519586526020860194909452848401929092526001600160a01b0316606084015215156080830152519081900360a00190f35b3480156101de57600080fd5b50610143600480360360208110156101f557600080fd5b503561080e565b34801561020857600080fd5b506101436004803603604081101561021f57600080fd5b506001600160a01b038135169060200135610881565b34801561024157600080fd5b5061014361089e565b34801561025657600080fd5b506100b56004803603602081101561026d57600080fd5b50356108a4565b8060005481106102b55760405162461bcd60e51b8152600401808060200182810382526023815260200180610c496023913960400191505060405180910390fd5b8142600160008381526020019081526020016000206001015410610314576040805162461bcd60e51b81526020600482015260116024820152705468697320706f6f6c206973206c69766560781b604482015290519081900360640190fd5b60035460ff1615610364576040805162461bcd60e51b81526020600482015260156024820152744c696172212043686561746572212054686965662160581b604482015290519081900360640190fd5b6003805460ff191660019081179091556000848152602091909152604090208054600290910154106103c75760405162461bcd60e51b8152600401808060200182810382526033815260200180610b9b6033913960400191505060405180910390fd5b33600090815260026020908152604080832086845290915290205480610434576040805162461bcd60e51b815260206004820152601d60248201527f4e6f7468696e6720796f752063616e2077697468647261772068657265000000604482015290519081900360640190fd5b604051600090339083908381818185875af1925050503d8060008114610476576040519150601f19603f3d011682016040523d82523d6000602084013e61047b565b606091505b50509050806104c8576040805162461bcd60e51b815260206004820152601460248201527314d95b991a5b99c81b5bdb995e4819985a5b195960621b604482015290519081900360640190fd5b3360008181526002602090815260408083208984529091528082208290555187917f3ceb37674be0001d002617fdc5593db16484470794ba8321288fd6e144f5270091a350506003805460ff19169055505050565b60008260005481106105605760405162461bcd60e51b8152600401808060200182810382526023815260200180610c496023913960400191505060405180910390fd5b6001600160a01b0383166000908152600260209081526040808320878452909152902054156105925760019150610597565b600091505b5092915050565b60008083116105ac57600080fd5b6001600160a01b0382166105bf57600080fd5b60008054600181019091556105d2610b60565b85815242850160208083019182526000608084018181526001600160a01b0388811660608701908152878452600194859052604080852088518155965195870195909555848701516002870155516003909501805492516001600160a01b0319909316959091169490941760ff60a01b1916600160a01b911515919091021790925551339184917f2f20e512c4f741f2807d702ff408750eb86f0607ccf0252de9bf2d4b74eef06e9190a350949350505050565b8060005481106106c75760405162461bcd60e51b8152600401808060200182810382526023815260200180610c496023913960400191505060405180910390fd5b814260016000838152602001908152602001600020600101541015610727576040805162461bcd60e51b81526020600482015260116024820152705468697320706f6f6c20697320646f6e6560781b604482015290519081900360640190fd5b6000341161076d576040805162461bcd60e51b815260206004820152600e60248201526d47696d6d6520796f206d6f6e657960901b604482015290519081900360640190fd5b33600081815260026020818152604080842088855282528084208054349081019091556001909252808420909201805482019055905190929186917f02567b2553aeb44e4ddd5d68462774dc3de158cb0f2c2da1740e729b22086aff9190a4505050565b600160208190526000918252604090912080549181015460028201546003909201549091906001600160a01b03811690600160a01b900460ff1685565b60008160005481106108515760405162461bcd60e51b8152600401808060200182810382526023815260200180610c496023913960400191505060405180910390fd5b6000838152600160208190526040822001544290039081131561087557915061087b565b60009250505b50919050565b600260209081526000928352604080842090915290825290205481565b60005481565b8060005481106108e55760405162461bcd60e51b8152600401808060200182810382526023815260200180610c496023913960400191505060405180910390fd5b8142600160008381526020019081526020016000206001015410610944576040805162461bcd60e51b81526020600482015260116024820152705468697320706f6f6c206973206c69766560781b604482015290519081900360640190fd5b60035460ff1615610994576040805162461bcd60e51b81526020600482015260156024820152744c696172212043686561746572212054686965662160581b604482015290519081900360640190fd5b6003805460ff1916600190811782556000858152602091909152604090200154600160a01b900460ff16156109fa5760405162461bcd60e51b8152600401808060200182810382526022815260200180610c276022913960400191505060405180910390fd5b600083815260016020526040902080546002909101541015610a4d5760405162461bcd60e51b8152600401808060200182810382526059815260200180610bce6059913960600191505060405180910390fd5b600083815260016020526040812060028101546003909101549091906001600160a01b0316825a6040519091906000818181858888f193505050503d8060008114610ab4576040519150601f19603f3d011682016040523d82523d6000602084013e610ab9565b606091505b5050905080610b06576040805162461bcd60e51b815260206004820152601460248201527314d95b991a5b99c81b5bdb995e4819985a5b195960621b604482015290519081900360640190fd5b600085815260016020526040808220600301805460ff60a01b1916600160a01b1790555186917f9b71b80499881a3683a1c9ab40c2c68bf1ca2bdc45b46d1b4b4fc0163c20f25791a250506003805460ff19169055505050565b6040518060a0016040528060008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152509056fe54686520706f6f6c206973206120737563636573732c20796f75722065746865727320617265206d696e65206861686168612e54686520706f6f6c206469646e7420726561636820746865207468726573686f6c6420616d6f75742c20676f20776974686472617720796f757220657468657273207573696e672077697468647261772066756e6374696f6e54686520706f6f6c2068617320616c7265616479206265656e2065786563757465645774662062726f207468697320706f6f6c20686173206e657665722065786973746564a264697066735822122077b0c18a3cdd59a70747ac177b88f5545b652dbe0ffd1979de5a1e074a1b46c164736f6c63430007040033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c8063ac4afa3811610059578063ac4afa3814610172578063ba99470c146101d2578063cbf1304d146101fc578063f525cb6814610235578063fe0d94c11461024a57610086565b80632e1a7d4d1461008b57806363aa673a146100b75780637fd8b9a214610104578063a694fc3a14610155575b600080fd5b34801561009757600080fd5b506100b5600480360360208110156100ae57600080fd5b5035610274565b005b3480156100c357600080fd5b506100f0600480360360408110156100da57600080fd5b50803590602001356001600160a01b031661051d565b604080519115158252519081900360200190f35b34801561011057600080fd5b506101436004803603606081101561012757600080fd5b50803590602081013590604001356001600160a01b031661059e565b60408051918252519081900360200190f35b6100b56004803603602081101561016b57600080fd5b5035610686565b34801561017e57600080fd5b5061019c6004803603602081101561019557600080fd5b50356107d1565b604080519586526020860194909452848401929092526001600160a01b0316606084015215156080830152519081900360a00190f35b3480156101de57600080fd5b50610143600480360360208110156101f557600080fd5b503561080e565b34801561020857600080fd5b506101436004803603604081101561021f57600080fd5b506001600160a01b038135169060200135610881565b34801561024157600080fd5b5061014361089e565b34801561025657600080fd5b506100b56004803603602081101561026d57600080fd5b50356108a4565b8060005481106102b55760405162461bcd60e51b8152600401808060200182810382526023815260200180610c496023913960400191505060405180910390fd5b8142600160008381526020019081526020016000206001015410610314576040805162461bcd60e51b81526020600482015260116024820152705468697320706f6f6c206973206c69766560781b604482015290519081900360640190fd5b60035460ff1615610364576040805162461bcd60e51b81526020600482015260156024820152744c696172212043686561746572212054686965662160581b604482015290519081900360640190fd5b6003805460ff191660019081179091556000848152602091909152604090208054600290910154106103c75760405162461bcd60e51b8152600401808060200182810382526033815260200180610b9b6033913960400191505060405180910390fd5b33600090815260026020908152604080832086845290915290205480610434576040805162461bcd60e51b815260206004820152601d60248201527f4e6f7468696e6720796f752063616e2077697468647261772068657265000000604482015290519081900360640190fd5b604051600090339083908381818185875af1925050503d8060008114610476576040519150601f19603f3d011682016040523d82523d6000602084013e61047b565b606091505b50509050806104c8576040805162461bcd60e51b815260206004820152601460248201527314d95b991a5b99c81b5bdb995e4819985a5b195960621b604482015290519081900360640190fd5b3360008181526002602090815260408083208984529091528082208290555187917f3ceb37674be0001d002617fdc5593db16484470794ba8321288fd6e144f5270091a350506003805460ff19169055505050565b60008260005481106105605760405162461bcd60e51b8152600401808060200182810382526023815260200180610c496023913960400191505060405180910390fd5b6001600160a01b0383166000908152600260209081526040808320878452909152902054156105925760019150610597565b600091505b5092915050565b60008083116105ac57600080fd5b6001600160a01b0382166105bf57600080fd5b60008054600181019091556105d2610b60565b85815242850160208083019182526000608084018181526001600160a01b0388811660608701908152878452600194859052604080852088518155965195870195909555848701516002870155516003909501805492516001600160a01b0319909316959091169490941760ff60a01b1916600160a01b911515919091021790925551339184917f2f20e512c4f741f2807d702ff408750eb86f0607ccf0252de9bf2d4b74eef06e9190a350949350505050565b8060005481106106c75760405162461bcd60e51b8152600401808060200182810382526023815260200180610c496023913960400191505060405180910390fd5b814260016000838152602001908152602001600020600101541015610727576040805162461bcd60e51b81526020600482015260116024820152705468697320706f6f6c20697320646f6e6560781b604482015290519081900360640190fd5b6000341161076d576040805162461bcd60e51b815260206004820152600e60248201526d47696d6d6520796f206d6f6e657960901b604482015290519081900360640190fd5b33600081815260026020818152604080842088855282528084208054349081019091556001909252808420909201805482019055905190929186917f02567b2553aeb44e4ddd5d68462774dc3de158cb0f2c2da1740e729b22086aff9190a4505050565b600160208190526000918252604090912080549181015460028201546003909201549091906001600160a01b03811690600160a01b900460ff1685565b60008160005481106108515760405162461bcd60e51b8152600401808060200182810382526023815260200180610c496023913960400191505060405180910390fd5b6000838152600160208190526040822001544290039081131561087557915061087b565b60009250505b50919050565b600260209081526000928352604080842090915290825290205481565b60005481565b8060005481106108e55760405162461bcd60e51b8152600401808060200182810382526023815260200180610c496023913960400191505060405180910390fd5b8142600160008381526020019081526020016000206001015410610944576040805162461bcd60e51b81526020600482015260116024820152705468697320706f6f6c206973206c69766560781b604482015290519081900360640190fd5b60035460ff1615610994576040805162461bcd60e51b81526020600482015260156024820152744c696172212043686561746572212054686965662160581b604482015290519081900360640190fd5b6003805460ff1916600190811782556000858152602091909152604090200154600160a01b900460ff16156109fa5760405162461bcd60e51b8152600401808060200182810382526022815260200180610c276022913960400191505060405180910390fd5b600083815260016020526040902080546002909101541015610a4d5760405162461bcd60e51b8152600401808060200182810382526059815260200180610bce6059913960600191505060405180910390fd5b600083815260016020526040812060028101546003909101549091906001600160a01b0316825a6040519091906000818181858888f193505050503d8060008114610ab4576040519150601f19603f3d011682016040523d82523d6000602084013e610ab9565b606091505b5050905080610b06576040805162461bcd60e51b815260206004820152601460248201527314d95b991a5b99c81b5bdb995e4819985a5b195960621b604482015290519081900360640190fd5b600085815260016020526040808220600301805460ff60a01b1916600160a01b1790555186917f9b71b80499881a3683a1c9ab40c2c68bf1ca2bdc45b46d1b4b4fc0163c20f25791a250506003805460ff19169055505050565b6040518060a0016040528060008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152509056fe54686520706f6f6c206973206120737563636573732c20796f75722065746865727320617265206d696e65206861686168612e54686520706f6f6c206469646e7420726561636820746865207468726573686f6c6420616d6f75742c20676f20776974686472617720796f757220657468657273207573696e672077697468647261772066756e6374696f6e54686520706f6f6c2068617320616c7265616479206265656e2065786563757465645774662062726f207468697320706f6f6c20686173206e657665722065786973746564a264697066735822122077b0c18a3cdd59a70747ac177b88f5545b652dbe0ffd1979de5a1e074a1b46c164736f6c63430007040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4,
        "contract": "contracts/Staker.sol:Staker",
        "label": "poolCount",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 19,
        "contract": "contracts/Staker.sol:Staker",
        "label": "pools",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Pool)15_storage)"
      },
      {
        "astId": 25,
        "contract": "contracts/Staker.sol:Staker",
        "label": "balances",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 28,
        "contract": "contracts/Staker.sol:Staker",
        "label": "lock",
        "offset": 0,
        "slot": "3",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_uint256,t_struct(Pool)15_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Staker.Pool)",
        "numberOfBytes": "32",
        "value": "t_struct(Pool)15_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(Pool)15_storage": {
        "encoding": "inplace",
        "label": "struct Staker.Pool",
        "members": [
          {
            "astId": 6,
            "contract": "contracts/Staker.sol:Staker",
            "label": "threshold",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 8,
            "contract": "contracts/Staker.sol:Staker",
            "label": "deadline",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 10,
            "contract": "contracts/Staker.sol:Staker",
            "label": "totalStaked",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 12,
            "contract": "contracts/Staker.sol:Staker",
            "label": "sendTo",
            "offset": 0,
            "slot": "3",
            "type": "t_address_payable"
          },
          {
            "astId": 14,
            "contract": "contracts/Staker.sol:Staker",
            "label": "executed",
            "offset": 20,
            "slot": "3",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}